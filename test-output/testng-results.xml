<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-25T00:46:39 IST" name="All Type" finished-at="2024-08-25T00:47:39 IST" duration-ms="60292">
    <groups>
      <group name="regression">
        <method signature="NewTestClass.validateDashboardPageContent()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" name="validateDashboardPageContent" class="testNGLearn.NewTestClass"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="NewTestClass.validateUrl()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" name="validateUrl" class="testNGLearn.NewTestClass"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-08-25T00:46:39 IST" name="checking" finished-at="2024-08-25T00:47:39 IST" duration-ms="60292">
      <class name="testNGLearn.NewTestClass">
        <test-method is-config="true" signature="openProperties()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" started-at="2024-08-25T00:46:39 IST" name="openProperties" finished-at="2024-08-25T00:46:39 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openProperties -->
        <test-method is-config="true" signature="browseUrl()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" started-at="2024-08-25T00:46:39 IST" name="browseUrl" finished-at="2024-08-25T00:47:32 IST" duration-ms="52942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseUrl -->
        <test-method signature="reachDashBoardPage()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" started-at="2024-08-25T00:47:32 IST" name="reachDashBoardPage" finished-at="2024-08-25T00:47:35 IST" duration-ms="2934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reachDashBoardPage -->
        <test-method signature="validateDashboardPageContent()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" started-at="2024-08-25T00:47:35 IST" name="validateDashboardPageContent" finished-at="2024-08-25T00:47:36 IST" duration-ms="1029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDashboardPageContent -->
        <test-method signature="validateTitle()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" started-at="2024-08-25T00:47:36 IST" name="validateTitle" finished-at="2024-08-25T00:47:36 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitle -->
        <test-method signature="validateUrl()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" started-at="2024-08-25T00:47:36 IST" name="validateUrl" finished-at="2024-08-25T00:47:38 IST" duration-ms="1939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testNGLearn.NewTestClass@3ad2e17]" started-at="2024-08-25T00:47:38 IST" name="tearDown" finished-at="2024-08-25T00:47:39 IST" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testNGLearn.NewTestClass -->
      <class name="AllureReport.TestCase2">
        <test-method signature="testMethod2()[pri:0, instance:AllureReport.TestCase2@3adcc812]" started-at="2024-08-25T00:47:32 IST" name="testMethod2" finished-at="2024-08-25T00:47:32 IST" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
      </class> <!-- AllureReport.TestCase2 -->
      <class name="AllureReport.TestCase1">
        <test-method signature="testMethod1()[pri:0, instance:AllureReport.TestCase1@6ce86ce1]" started-at="2024-08-25T00:47:32 IST" name="testMethod1" finished-at="2024-08-25T00:47:32 IST" duration-ms="90" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at AllureReport.TestCase1.testMethod1(TestCase1.java:12)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
      </class> <!-- AllureReport.TestCase1 -->
    </test> <!-- checking -->
  </suite> <!-- All Type -->
</testng-results>
